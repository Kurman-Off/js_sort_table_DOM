{"mappings":"ACEA,IAAM,EAAgB,SAAC,CAAvB,EACE,OAAO,WAAW,EAAM,OAAO,CAAC,aAAc,MAAQ,CACxD,EAEM,EAAY,SAAC,CAAA,CAAa,CAAhC,EAEE,IAAM,EAAQ,AADA,SAAS,aAAa,CAAC,SACjB,aAAa,CAAC,SAC5B,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAE/C,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAK,QAAQ,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GACnD,EAAQ,EAAK,QAAQ,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,UAEzD,AAAI,EACK,EAAc,GAAS,EAAc,GAErC,EAAM,aAAa,CAAC,EAE/B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EAIA,AAFY,SAAS,gBAAgB,CAAC,YAElC,OAAO,CAAC,SAAC,CAAA,CAAI,CAAjB,EACE,EAAG,gBAAgB,CAAC,QAAS,WAI3B,EAAU,EAFR,AAA0B,WAA1B,EAAG,WAAW,CAAC,IAAI,IAAmB,AAA0B,QAA1B,EAAG,WAAW,CAAC,IAAI,GAG7D,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar parseCurrency = function(value) {\n    return parseFloat(value.replace(/[^0-9.-]+/g, \"\")) || 0;\n};\nvar sortTable = function(columnIndex, isNumeric) {\n    var table = document.querySelector(\"table\");\n    var tbody = table.querySelector(\"tbody\");\n    var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.children[columnIndex].textContent.trim();\n        var cellB = rowB.children[columnIndex].textContent.trim();\n        if (isNumeric) return parseCurrency(cellA) - parseCurrency(cellB);\n        else return cellA.localeCompare(cellB);\n    });\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n};\nvar ths = document.querySelectorAll(\"thead th\");\nths.forEach(function(th, index) {\n    th.addEventListener(\"click\", function() {\n        var isNumeric = th.textContent.trim() === \"Salary\" || th.textContent.trim() === \"Age\";\n        sortTable(index, isNumeric);\n    });\n});\n\n//# sourceMappingURL=index.7bfbb00e.js.map\n","'use strict';\n\nconst parseCurrency = (value) => {\n  return parseFloat(value.replace(/[^0-9.-]+/g, '')) || 0;\n};\n\nconst sortTable = (columnIndex, isNumeric) => {\n  const table = document.querySelector('table');\n  const tbody = table.querySelector('tbody');\n  const rows = Array.from(tbody.querySelectorAll('tr'));\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.children[columnIndex].textContent.trim();\n    const cellB = rowB.children[columnIndex].textContent.trim();\n\n    if (isNumeric) {\n      return parseCurrency(cellA) - parseCurrency(cellB);\n    } else {\n      return cellA.localeCompare(cellB);\n    }\n  });\n\n  rows.forEach((row) => tbody.appendChild(row));\n};\n\nconst ths = document.querySelectorAll('thead th');\n\nths.forEach((th, index) => {\n  th.addEventListener('click', () => {\n    const isNumeric =\n      th.textContent.trim() === 'Salary' || th.textContent.trim() === 'Age';\n\n    sortTable(index, isNumeric);\n  });\n});\n"],"names":["parseCurrency","value","parseFloat","replace","sortTable","columnIndex","isNumeric","tbody","table","document","querySelector","rows","Array","from","querySelectorAll","sort","rowA","rowB","cellA","children","textContent","trim","cellB","localeCompare","forEach","row","appendChild","ths","th","index","addEventListener"],"version":3,"file":"index.7bfbb00e.js.map"}